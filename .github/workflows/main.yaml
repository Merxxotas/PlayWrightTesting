name: Playwright CI Test Pipeline # Nombre descriptivo del pipeline de CI para pruebas con Playwright

on:
  push:
    branches:
      - main # El workflow se ejecuta cuando hay un push a la rama main

jobs:
  test:
    runs-on: ubuntu-24.04 # El runner usará Ubuntu 24.04

    steps:
      - name: Validar código # Clona el repositorio en el runner
        uses: actions/checkout@v4

      - name: Instalar NodeJS # Instala Node.js versión 22.x en el runner
        uses: actions/setup-node@v4
        with:
          node-version: "22.x"

      - name: Cache node Modules # Cachea la carpeta ~/.npm para acelerar instalaciones de dependencias
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }} # La clave depende del SO y del hash de package-lock.json
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Instalar dependencias del modulo1 # Instala dependencias npm en el módulo 1
        working-directory: ./modulo1
        run: npm install

      - name: Instalar dependencias del modulo2 # Instala dependencias npm en el módulo 2
        working-directory: ./modulo2
        run: npm install

      - name: Instalar dependencias del modulo3 # Instala dependencias npm en el módulo 3
        working-directory: ./modulo3
        run: npm install

      - name: Instalar navegadores para Playwright (modulo1) # Descarga navegadores necesarios para Playwright en módulo 1
        working-directory: ./modulo1
        run: npx playwright install

      - name: Instalar navegadores para Playwright (modulo2) # Descarga navegadores necesarios para Playwright en módulo 2
        working-directory: ./modulo2
        run: npx playwright install

      - name: Instalar navegadores para Playwright (modulo3) # Descarga navegadores necesarios para Playwright en módulo 3
        working-directory: ./modulo3
        run: npx playwright install

      - name: Cache Playwright Browsers # Cachea los navegadores instalados por Playwright para futuras ejecuciones
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/package-lock.json') }}

      - name: Instalar Http-server via npm # Instala el paquete http-server globalmente para servir archivos estáticos
        run: npm install -g http-server

      - name: Iniciar servidor HTTP en segundo plano # Inicia el servidor http-server en el puerto 5500 usando nohup
        run: |
          nohup http-server -p 5500 &

      - name: Esperar por el server para Iniciar tests de integración # Espera hasta que el servidor HTTP esté disponible
        run: |
          while ! curl -s http://127.0.0.1:5500; do
            echo "Esperando al servidor"
            sleep 1
          done

      - name: Ejecutar tests de Playwright - Modulo1 # Ejecuta pruebas de Playwright en módulo 1, continúa si hay errores
        working-directory: ./modulo1
        run: npx playwright test
        continue-on-error: false

      - name: Ejecutar tests de Playwright - Modulo2 (excluyendo test visual [Screenshots]) # Ejecuta pruebas en módulo 2, excluyendo las marcadas como "visual"
        working-directory: ./modulo2
        run: npx playwright test --grep-invert "visual"
        continue-on-error: false

      - name: Ejecutar tests de Playwright - Modulo3 (excluyendo test visual [Screenshots]) # Ejecuta pruebas en módulo 3, excluyendo las marcadas como "visual"
        working-directory: ./modulo3
        run: npx playwright test --grep-invert "visual"
        continue-on-error: false
